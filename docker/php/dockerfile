# docker/php/Dockerfile  — production target
# ---------- builder stage ----------
FROM composer:2.7 AS composer
WORKDIR /app

# 1) Install extensions Composer will need
RUN apk add --no-cache icu-data-full icu-dev zlib libzip-dev \
 && docker-php-ext-install intl pdo_mysql

# 2) Copy manifest & (optionally) lock file
COPY composer.json composer.lock* ./

# 3) Install production deps
RUN composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction


# ---------- runtime stage ----------
FROM php:8.2-fpm-alpine

# PHP extensions you actually need
RUN apk add --no-cache icu-data-full zlib libpng libjpeg-turbo libxml2 \
 && docker-php-ext-install intl opcache pdo_mysql

WORKDIR /var/www
# bring in vendor first (better layer‑cache hit rate)
COPY --from=composer /app/vendor /var/www/vendor
# now copy the rest of the source
COPY . /var/www



 # Cache configs, routes, views, events, then set writable perms
RUN php artisan optimize \
    && chown -R www-data:www-data storage bootstrap/cache


USER www-data
CMD ["php-fpm", "-y", "/usr/local/etc/php-fpm.conf", "-R"]
